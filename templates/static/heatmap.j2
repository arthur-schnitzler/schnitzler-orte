{% extends "templates/partials/base.j2" %}<html lang="en">
{% block title%} Schnitzlers Aufenthalte als Heatmap {% endblock %}
{% block scriptHeader %}
    <style>
     
      #map { height: 800px; }
      .leaflet-container {
        background: rgba(0,0,0,.8) !important;
      }
    </style>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />
    <script src="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.js"></script>
    <script src="static/js/heatmap.js"></script>
    <script src="static/js/leaflet-heatmap.js"></script>
{% endblock %}
{% block content %}
  <body>
   
   <div id="map"></div>
    <script>
      window.onload = function() {

        async function foo() {
            let obj;
            const res = await fetch('data/heatmap.json')
            obj = await res.json();
            var testData = {
                max: 8000,
                data: obj
              };
              var baseLayer = L.tileLayer(
                'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{
                  attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
                  maxZoom: 18
                }
              );

              var cfg = {
                // radius should be small ONLY if scaleRadius is true (or small radius is intended)
                "radius": .5,
                "maxOpacity": .8, 
                // scales the radius based on map zoom
                "scaleRadius": true, 
                // if set to false the heatmap uses the global maximum for colorization
                // if activated: uses the data maximum within the current map boundaries 
                //   (there will always be a red spot with useLocalExtremas true)
                "useLocalExtrema": true,
                // which field name in your data represents the latitude - default "lat"
                latField: 'lat',
                // which field name in your data represents the longitude - default "lng"
                lngField: 'lng',
                // which field name in your data represents the data value - default "value"
                valueField: 'count'
              };

              var heatmapLayer = new HeatmapOverlay(cfg);

              var map = new L.Map('map', {
                center: new L.LatLng(48.00, 16.00),
                zoom: 6,
                layers: [baseLayer, heatmapLayer]
              });
      
              heatmapLayer.setData(testData);
      
              // make accessible for debugging
              layer = heatmapLayer;
          }
          foo()
      };
    </script>
{% endblock %}